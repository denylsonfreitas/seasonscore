rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /reviews/{reviewId} {
      allow read;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         request.resource.data.userId == request.auth.uid);
    }
    
    match /watchlist/{docId} {
      allow read;
      allow create: if request.auth != null && 
        docId.matches(request.auth.uid + '_.*');
      allow delete: if request.auth != null && 
        docId.matches(request.auth.uid + '_.*');
    }

    match /followers/{followerId} {
      allow read;
      allow create, delete: if request.auth != null;
    }
    
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    match /lastNotifiedEpisodes/{docId} {
      allow read: if request.auth != null && 
        docId.matches(request.auth.uid + '_.*');
      allow create, write: if request.auth != null && 
        docId.matches(request.auth.uid + '_.*');
    }
  }
}